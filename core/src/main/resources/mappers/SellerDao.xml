<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.go2plus.core.userCenter.dao.SellerDao">

  <select id="vipUserDownload" parameterType="int" resultType="hashMap">
    SELECT
    d.username,
    IF(d.mobile > 0, d.mobile, e.phone) AS mobilePhone,
    e.qq,
    e.laddress,
    c.download_count
    FROM
    (SELECT
    b.user_id, COUNT(*)
    download_count
    FROM
    product a
    JOIN
    log_download b ON a.id = b.product_id
    WHERE
    a.user_id = #{supplierId}
    GROUP BY b.user_id
    ) c
    JOIN
    user d ON c.user_id =
    d.id
    JOIN
    user_meta e ON c.user_id =
    e.user_id
    order by
    c.download_count DESC,d.username
    ASC
  </select>

  <select id="getAliItem" resultMap="aliItemResultMap">
    SELECT
    a.id,
    a.user_id,
    a.create_day,
    b.article_number,
    b.state,
    b.price,
    IFNULL(IFNULL(b.supplier_index_image,b.seller_index_image),b.index_image) AS index_image,
    c.address,
    IFNULL(c.brand, c.title) AS title,
    c.qq,
    c.phone,
    a.offerid,
    a.ali_resource_owner,
    a.create_time,
    a.ali_state,
    d.mobile
    FROM
    ali_item a
    INNER JOIN
    product b ON a.product_id =
    b.id
    INNER JOIN
    supplier c ON b.user_id = c.user_id
    INNER JOIN
    user d ON
    a.user_id = d.id
    WHERE
    a.user_id = #{userId}
    AND
    a.ali_state = 1
    AND a.ali_state >= 0
    AND a.STATE >= 0
    <if test="aliNick!='' and aliNick!=null">
      and a.ali_resource_owner=#{aliNick}
    </if>
    ORDER BY a.STATE ASC , c.create_time DESC
  </select>

  <resultMap id="aliItemResultMap" type="AliItem">
    <result property="product.price" column="price" />
    <result property="product.articleNumber" column="article_number" />
    <result property="product.indexImage" column="index_image" />
    <result property="product.state" column="state" />
    <result property="supplier.address" column="address" />
    <result property="supplier.title" column="title" />
    <result property="supplier.qq" column="qq" />
    <result property="supplier.phone" column="phone" />
    <result property="user.mobile" column="mobile" />
  </resultMap>

  <select id="getTaobaoItem" resultMap="taobaoItemResultMap">
    SELECT
    t.id as taobaoitem_id,
    t.user_id,
    t.create_day,
    t.wl_state,
    t.num_iid,
    t.price,
    t.taobao_nick,
    t.create_time,
    t.taobao_state,
    p.article_number,
    p.state,
    ifnull(ifnull(p.supplier_index_image,p.seller_index_image),p.index_image) AS index_image,
    p.id,
    s.address,
    ifnull(s.brand,s.title) as
    title,
    s.qq,
    s.phone,
    u.mobile
    FROM taobao_item t
    INNER JOIN product p ON t.product_id=p.id
    INNER JOIN user u ON
    p.user_id=u.id
    INNER JOIN
    supplier s ON p.user_id=s.user_id
    WHERE t.user_id=#{param1}
    AND
    p.state > 0
    AND
    t.taobao_state >= 0
    AND
    t.state >= 0
    <if test="param2 > 0">
      AND t.taobao_nick = #{param2}
    </if>
    ORDER BY p.state ASC, t.create_time DESC
  </select>

  <resultMap id="taobaoItemResultMap" type="TaobaoItem">
    <result property="id" column="taobaoitem_id" />
    <result property="user.mobile" column="mobile" />
    <result property="product.state" column="state" />
    <result property="product.articleNumber" column="article_number" />
    <result property="product.indexImage" column="index_image" />
    <result property="supplier.address" column="address" />
    <result property="supplier.title" column="title" />
    <result property="supplier.qq" column="qq" />
    <result property="supplier.phone" column="phone" />
  </resultMap>

  <update id="delTaobaoItem">
    UPDATE ${table}
    SET state=-1
    WHERE
    id=#{id}
  </update>

  <update id="delAliItem">
    UPDATE ali_item
    SET state=-1
    WHERE
    id=#{id}
  </update>

  <select id="productDownload" parameterType="int" resultType="hashMap">
    SELECT c.username,
    b.article_number,
    d.laddress,
    a.create_time
    FROM
    log_download a
    INNER JOIN product b
    ON a.product_id = b.id
    INNER JOIN
    user
    c
    ON a.user_id = c.id
    INNER JOIN user_meta d
    ON c.id = d.user_id
    WHERE
    b.user_id = #{supplierId}
    and a.state=1
  </select>

  <select id="taobaoProductPublish" parameterType="int" resultType="hashMap">
    SELECT
    a.taobao_nick,
    a.publish_time,
    b.article_number,
    a.num_iid,
    c.taobao_seller_credit_level
    FROM taobao_item a
    join product b
    on a.product_id=b.id
    join seller c
    on a.seller_id=c.id
    where
    b.user_id=#{supplierId}
    and a.state=1
    and b.state=1
    limit 50;
  </select>

  <select id="getDownloadSupplier" parameterType="Integer" resultMap="downloadSupplierResultMap">
    SELECT
    ld.supplier_user_id,
    ld.download_product_num,
    u.mobile,
    s.address,
    s.title,
    s.qq,
    s.qqun,
    si.subdomain,
    sb.id as black_id
    FROM
    (SELECT
    supplier_user_id,
    MAX(create_time) AS create_time,
    COUNT(product_id) AS
    download_product_num
    FROM
    log_download
    WHERE
    user_id=#{userId}
    AND
    state=1
    GROUP BY supplier_user_id
    ) ld
    INNER JOIN supplier
    s ON
    ld.supplier_user_id=s.user_id
    INNER JOIN
    user u ON ld.supplier_user_id=u.id
    INNER JOIN site si ON ld.supplier_user_id=si.user_id
    left
    join seller_blacklist sb
    on s.user_id=sb.supplier_user_id
    and sb.seller_user_id=#{userId}
    and sb.state=1
    ORDER BY
    ld.download_product_num
    DESC,
    ld.create_time DESC
  </select>

  <resultMap type="LogDownload" id="downloadSupplierResultMap">
    <result property="supplier.title" column="title" />
    <result property="supplier.address" column="address" />
    <result property="supplier.qq" column="qq" />
    <result property="supplier.qqun" column="qqun" />
    <result property="user.mobile" column="mobile" />
    <result property="site.subdomain" column="subdomain" />
    <result property="sellerBlackList.id" column="black_id" />
  </resultMap>

  <select id="selectSellerBlackList" resultMap="SellerBlackListMap">
    SELECT
    a.id,
    a.seller_user_id,
    a.supplier_user_id,
    b.title,
    b.address,
    c.mobile,
    d.subdomain
    FROM
    seller_blacklist a
    JOIN
    supplier b ON a.supplier_user_id = b.user_id
    join user c
    on a.supplier_user_id=c.id
    join site d
    on
    a.supplier_user_id=d.user_id
    where a.seller_user_id=#{sellerUserId}
    and a.state=1
    order by a.create_time DESC
  </select>

  <resultMap type="SellerBlackList" id="SellerBlackListMap">
    <result property="supplier.title" column="title" />
    <result property="supplier.address" column="address" />
    <result property="user.mobile" column="mobile" />
    <result property="site.subdomain" column="subdomain" />
  </resultMap>

  <!-- 已加入黑名单的厂家 -->
  <select id="queryJoinedBlackListSupplierId" resultType="String">
    select supplier_user_id as supplierId
    from seller_blacklist
    where
    seller_user_id=#{sellerId}
  </select>

  <!-- 淘宝卖家发布的供应商列表 -->
  <select id="querySellerPublishSupplier" resultMap="sellerPublishSupplierMap">
    select distinct
    a.supplier_user_id,
    a.seller_user_id,
    b.title
    from
    ln_seller2product a
    join
    supplier b
    on a.supplier_user_id=b.user_id
    where
    a.seller_user_id=#{sellerId}
    <!-- 已在黑名单中的供应商不再显示 -->
    <if test="joinedSellerBlackList.size()>0">
      and a.supplier_user_id not in
      <foreach collection="joinedSellerBlackList" item="supplierId" index="index" open="(" close=")" separator=",">
        #{supplierId}
      </foreach>

    </if>
  </select>

  <resultMap id="sellerPublishSupplierMap" type="InSeller2Product">
    <result property="supplier.title" column="title" />
  </resultMap>

  <!-- 查询加黑原因 -->
  <select id="queryAddBlackListReason" resultType="ComplainCategory">
    SELECT
    id,
    title
    FROM complain_category
    WHERE state=1
    ORDER BY weight DESC
  </select>

  <delete id="deleteSellerBlackList">
    delete from seller_blacklist
    WHERE id=#{id}
  </delete>

  <insert id="saveSellerBlackList" parameterType="SellerBlackList" useGeneratedKeys="true" keyProperty="id">
    insert into
    seller_blacklist
    (
    seller_user_id ,
    supplier_user_id ,
    is_customer ,
    comment ,
    state ,
    create_time ,
    update_time
    )
    values(
    #{sellerUserId} ,
    #{supplierUserId} ,
    #{isCustomer} ,
    #{comment} ,
    #{state} ,
    now() ,
    now()
    )
  </insert>

  <select id="getSellerFavorite" parameterType="Integer" resultMap="sellerFavoriteResultMap">
    SELECT
    a.create_time,
    a.product_id,
    b.title,
    b.qq,
    b.phone,
    b.address,
    c.mobile,
    d.state,
    d.article_number,
    d.price,
    ifnull(ifnull(d.supplier_index_image,d.index_image),d.seller_index_image) AS index_image
    FROM
    seller_favorite a
    INNER JOIN product d ON
    a.product_id=d.id
    INNER JOIN supplier b ON d.user_id=b.user_id
    INNER JOIN user c ON a.user_id=c.id
    WHERE a.user_id=#{userId}
    ORDER BY
    d.state ASC, a.create_time DESC
  </select>

  <resultMap id="sellerFavoriteResultMap" type="SellerFavorite">
    <result property="supplier.title" column="title" />
    <result property="supplier.qq" column="qq" />
    <result property="supplier.phone" column="phone" />
    <result property="supplier.address" column="address" />
    <result property="user.mobile" column="mobile" />
    <result property="product.state" column="state" />
    <result property="product.articleNumber" column="article_number" />
    <result property="product.indexImage" column="index_image" />
    <result property="product.price" column="price" />
  </resultMap>
</mapper>

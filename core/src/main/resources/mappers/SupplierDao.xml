<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.go2plus.core.userCenter.dao.SupplierDao">
  <select id="findSupplierByUserId" parameterType="int" resultMap="supplierMap">
    select
    a.id,
    a.user_id,
    if(a.title>'',a.title, a.brand) as title,
    a.certified_type,
    a.address,
    a.avatar,
    a.brand,
    a.capital,
    a.card_mid,
    a.card_number,
    a.certified_time,
    a.certified_type,
    a.contact,
    a.create_time,
    a.have_strength,
    a.id,
    a.is_audit,
    a.is_hide_stats,
    a.is_manufacturer,
    a.is_print,
    a.phone,
    a.market_id,
    a.membership_type,
    c.mobile,
    a.qq,
    a.qqun,
    a.recheck,
    a.service_create_time,
    a.service_end_date,
    a.service_start_date,
    a.site_id,
    a.state,
    a.title,
    a.update_time,
    a.user_id,
    a.weight,
    <!-- 只有markid=5并且有认证的商家，才有积分 -->
    if(a.market_id=5 and a.certified_type>0,b.score,0) as score,
    d.subdomain
    FROM
    supplier a
    JOIN
    supplier_rank b ON a.user_id = b.user_id
    left join user c
    on a.user_id=c.id
    join site d
    on a.site_id=d.id
    where a.user_id=#{userId}
  </select>

  <resultMap type="Supplier" id="supplierMap">
    <result property="supplierRank.score" column="score" />
    <result property="user.mobile" column="mobile" />
    <result property="site.subdomain" column="subdomain" />
  </resultMap>

  <update id="updateSupplierProfile" parameterType="Supplier">
    update supplier
    set
    title=#{title},
    brand=#{brand},
    contact=#{contact},
    phone=#{phone},
    qq=#{qq},
    address=#{address}
    where
    user_id=#{userId}
  </update>

  <select id="getSupplierByCondition" resultMap="getSupplierByConditionResultMap">
    SELECT
    a.id,a.title,a.is_audit,a.is_manufacturer,a.phone,a.qq,a.address,a.market_id,a.certified_type,a.card_number,a.user_id,a.create_time as
    supplier_create_time,
    b.mobile,b.create_time,b.id,
    c.product_count,c.user_count,c.recommand_weight,c.recent_products,
    d.subdomain,
    e.score
    FROM
    supplier a
    INNER
    JOIN user b ON a.user_id=b.id
    LEFT JOIN supplier_stats c ON a.user_id=c.user_id
    INNER JOIN site d ON
    a.user_id=d.user_id
    LEFT JOIN
    supplier_rank e ON a.user_id=e.user_id
    WHERE
    a.state=1
    AND a.user_id!=10070
    AND a.certified_type>0
    AND
    c.product_count>0
    <if test="param4 != 'all' and param4 != ''">
      AND (
      b.username like #{param4}
      OR b.mobile like #{param4}
      OR a.address like #{param4}
      OR a.qq like #{param4}
      OR a.title like
      #{param4}
      )
    </if>
    <if test="param1 != null">
      <choose>
        <when test="param1 == 99">
          AND a.certified_type=2 AND a.market_id=5
        </when>
        <when test="param1 == 88">
          AND a.is_manufacturer=1 AND a.market_id=5
        </when>
        <when test="param1 != 0">
          AND a.market_id=#{param1}
        </when>
      </choose>
    </if>
    <if test="param1 == null">
      AND market_id=5
    </if>
    <if test="param2 != null">
      AND a.capital=#{param2}
    </if>
    <choose>
      <when test="param3 == 2">
        ORDER BY a.create_time DESC,c.recommand_weight DESC
      </when>
      <when test="param3 == 3">
        ORDER BY c.user_count DESC,c.recommand_weight DESC
      </when>
      <when test="param3 == 4">
        ORDER BY c.product_count DESC,c.recommand_weight DESC
      </when>
      <otherwise>
        ORDER BY c.recommand_weight DESC,a.weight DESC,b.last_login_time DESC
      </otherwise>
    </choose>
  </select>

  <resultMap id="getSupplierByConditionResultMap" type="Supplier">
    <result property="createTime" column="supplier_create_time" />
    <result property="user.mobile" column="mobile" />
    <result property="user.createTime" column="create_time" />
    <result property="user.id" column="id" />
    <result property="user.mobile" column="mobile" />
    <result property="supplierStats.productCount" column="product_count" />
    <result property="supplierStats.userCount" column="user_count" />
    <result property="supplierStats.recommandWeight" column="recommand_weight" />
    <result property="supplierStats.recentProducts" column="recent_products" />
    <result property="site.subdomain" column="subdomain" />
    <result property="supplierRank.score" column="score" />
  </resultMap>

  <select id="getCapitalByCondition" resultType="Supplier">
    SELECT a.capital, COUNT(a.id) AS num
    FROM supplier a
    INNER JOIN supplier_stats b ON a.user_id=b.user_id
    INNER JOIN user c ON
    a.user_id=c.id
    WHERE a.user_id!=10070 AND a.certified_type>0 AND b.product_count>0 AND a.state=1
    <if test="param2 != 'all' and param2 != ''">
      AND (
      c.username like #{param2}
      OR c.mobile like #{param2}
      OR a.address like #{param2}
      OR a.qq like #{param2}
      OR a.phone like
      #{param2}
      OR a.title like #{param2}
      )
    </if>
    <if test="param1 != null">
      <choose>
        <when test="param1 == 99">
          AND a.certified_type=2 AND a.market_id=5
        </when>
        <when test="param1 == 88">
          AND a.is_manufacturer=1 AND a.market_id=5
        </when>
        <when test="param1 != 0">
          AND a.market_id=#{param1}
        </when>
      </choose>
    </if>
    GROUP BY capital
  </select>

  <select id="getSupplierRankByUserId" resultType="SupplierRank">
    SELECT rank,score FROM supplier_rank WHERE
    user_id=#{userId}
  </select>

  <select id="getTop500" resultType="SupplierRank">
    SELECT user_id, rank, score FROM supplier_rank order by rank asc limit 500;
  </select>

  <select id="scoreDetail" parameterType="Integer" resultType="SupplierCreditNew">
    SELECT type,unit,score,create_day FROM
    supplier_credit_new WHERE
    user_id=#{userId}
    ORDER BY create_time DESC, type DESC
  </select>

  <select id="getScoreCategory" resultType="ScoreCategory">
    SELECT id,title,cid,score FROM score_category WHERE state=1 ORDER BY cid
    ASC
  </select>

  <select id="getScoreTotal" parameterType="integer" resultType="SupplierCreditNew">
    SELECT type,sum(unit) AS unit, score,
    ceil(sum(unit*score)) as
    total_score FROM supplier_credit_new WHERE user_id=#{userId}
    GROUP BY type
  </select>

  <select id="vipUserDownload" parameterType="int" resultType="hashMap">
    SELECT
    d.username,
    IF(d.mobile > 0, d.mobile, e.phone) AS mobilePhone,
    e.qq,
    e.laddress,
    c.download_count
    FROM
    (SELECT
    b.user_id, COUNT(*)
    download_count
    FROM
    product a
    JOIN
    log_download b ON a.id = b.product_id
    WHERE
    a.user_id = #{supplierId}
    GROUP BY b.user_id
    ) c
    JOIN
    user d ON c.user_id =
    d.id
    JOIN
    user_meta e ON c.user_id =
    e.user_id
    order by
    c.download_count,d.username
  </select>

  <select id="productDownload" parameterType="int" resultType="hashMap">
    SELECT c.username,
    b.article_number,
    d.laddress,
    a.create_time
    FROM
    log_download a
    INNER JOIN product b
    ON a.product_id = b.id
    INNER JOIN
    user
    c
    ON a.user_id = c.id
    INNER JOIN user_meta d
    ON c.id = d.user_id
    WHERE
    b.user_id = #{supplierId}
    and a.state=1
  </select>

  <select id="taobaoProductPublish" parameterType="int" resultType="hashMap">
    SELECT
    a.taobao_nick,
    a.publish_time,
    b.article_number,
    a.num_iid,
    c.taobao_seller_credit_level
    FROM taobao_item a
    join product b
    on a.product_id=b.id
    join seller c
    on a.seller_id=c.id
    where
    b.user_id=#{supplierId}
    and a.state=1
    and b.state=1
  </select>
  <select id="findTitleByTitle" resultType="java.lang.String">
    select title from supplier where title=#{title} limit 1
  </select>
  <!--插入供货商 -->
  <insert id="insert" parameterType="Supplier" useGeneratedKeys="true" keyProperty="id">
    insert into supplier(user_id,site_id,title,contact,address,qq) values(#{userId},#{siteId},#{title},#{contact},#{address},#{qq})
  </insert>
  <!--插入供货商扩展 -->
  <insert id="insertSupplierMeta" parameterType="supplierMeta" useGeneratedKeys="true" keyProperty="id">
    insert into supplier_meta(user_id,nature,guimo,setting,recruit) values(#{userId},#{nature},#{guimo},#{setting},#{recruit})
  </insert>
  <!--插入供货商统计 -->
  <insert id="insertSupplierStats" parameterType="SupplierStats" useGeneratedKeys="true" keyProperty="id">
    insert into
    supplier_stats(user_id, state, create_time) values(#{userId},#{state},#{createTime})
  </insert>

  <resultMap id="getByUserIdResultMap" type="Supplier">

    <result property="id" column="id" />
    <result property="userId" column="user_id" />
    <result property="title" column="title" />
    <result property="isAudit" column="is_audit" />
    <result property="isManufacturer" column="is_manufacturer" />
    <result property="phone" column="phone" />
    <result property="qq" column="qq" />
    <result property="address" column="address" />
    <result property="marketId" column="market_id" />
    <result property="certifiedType" column="certified_type" />
    <result property="cardNumber" column="card_number" />
    <result property="createTime" column="create_time" />

    <association property="user" column="id" javaType="User">
      <result property="username" column="username" />
      <result property="password" column="password" />
      <result property="mobile" column="mobile" />
    </association>

    <association property="site" column="user_id" javaType="Site">
      <result property="subdomain" column="subdomain" />
    </association>

    <association property="supplierRank" column="user_id" javaType="SupplierRank">
      <result property="rank" column="rank" />
    </association>

  </resultMap>
  <select id="getByUserId" resultMap="getByUserIdResultMap" parameterType="int">
    SELECT
    a.username,
    a.password,
    a.mobile,
    b.*,
    c.subdomain,
    d.rank
    FROM
    user a
    LEFT JOIN supplier b ON a.id = b.user_id
    LEFT JOIN site c ON a.id =
    c.user_id
    LEFT JOIN supplier_rank d ON a.id = d.user_id
    <where>a.id = #{userId}</where>
  </select>
</mapper>
